function Tree(){var t=this;this.levels=["life","kingdom","phylum","class","order","family","genus","species"],this.level=1,this.rootID=0,this.root={id:0,scientificName:"Life"},this.parentIDs=[],this.parentInfo=[],this.basicChildrenInformation={},this.childrenDescription={},this.childrenIDs=[],this.isVirusChildren=!1,this.baseUrl="http://api.gbif.org/v0.9/species/",this.getTaxon=function(){return this.levels[this.level]},this.isAtSpeciesLevel=function(){return this.level===this.levels.length-1},this.isAtKingdomLevel=function(){return 0===this.parentIDs.length},this.getParentInfo=function(){return this.isAtKingdomLevel()?void 0:_.last(t.parentInfo)},this.getBasicInformation=function(e){return 0===e?{id:0,scientificName:"Life"}:e===this.rootID?this.root:t.basicChildrenInformation[e]},this.setRootToChild=function(t){this.parentIDs.push(this.rootID),this.parentInfo.push(this.getBasicInformation(this.rootID)),this.rootID=t,this.root=this._getMaximumInformation(t),this.basicChildrenInformation={},this.childrenDescription={},this.childrenIDs=[],this.level=this.level+1,8===t&&(this.isVirusChildren=!0)},this._getMaximumInformation=function(t){return this.childrenDescription[t]||this.basicChildrenInformation[t]},this.setRootToParent=function(){if(!this.isAtKingdomLevel()){var t=this.parentIDs.pop();this.rootID=t,this.root=this.parentInfo.pop(),this.basicChildrenInformation={},this.childrenDescription={},this.childrenIDs=[],this.level=this.level-1,0===this.rootID&&(this.isVirusChildren=!1)}},this._buildBasicChildrenInformationArray=function(){return _.map(t.childrenIDs,function(e){return t.basicChildrenInformation[e]})},this.fetchBasicChildrenInformation=function(e){this._fetchBasicChildrenInformation(function(i){t._processBasicChildrenInformationCallback(i);var r=t._buildBasicChildrenInformationArray();e(r)})},this.fetchChildDescription=function(e,i){var r=this._buildUrl(e)+"/descriptions";this._fetchData(r,function(r){var n=[],a=r[0].results;_.forEach(a,function(t){"ENGLISH"===t.language&&n.push({type:t.type,description:t.description})}),t.childrenDescription[e]=n,i(n)})},this._processBasicChildrenInformationCallback=function(e){t.basicChildrenInformation={},t.childrenDescription={},t.childrenIDs=[];for(var i=t.levels[t.level],r=0;r<e.length;r++){var n=e[r];(this.isVirusChildren||n.rank.toLowerCase()===i)&&(n.id=parseInt(n.key),delete n.key,t.childrenIDs.push(n.id),t.basicChildrenInformation[n.id]=n)}},this.make_children_url=function(){return t.baseUrl+this.rootID.toString()+"/children?limit=100"},this._fetchBasicChildrenInformation=function(e){if(0===this.rootID)this._fetchRootNodesBasicInformation(e);else{var i=t.make_children_url();this._fetchData(i,function(t){e(t[0].results)})}},this._fetchRootNodesBasicInformation=function(t){$.getJSON("data/data.json",t)},this._fetchChildrenData=function(e){var i=this._buildUrls(this.childrenIDs);this._fetchMultipleData(i,function(i){var r=[];_.each(i,function(e){var i=e[0];i.key=parseInt(i.key),t.childrenDescription[i.key]=i,r.push(i)}),e(r)})},this._buildUrls=function(t){return _.map(t,this._buildUrl)},this._buildUrl=function(e){return encodeURI(t.baseUrl+e)},this._fetchData=function(t,e){this._fetchMultipleData([t],e)},this._fetchMultipleData=function(t,e){var i=this._makeAllRequests(t),r=function(){};$.when.all(i).done(e,r)},this._makeAllRequests=function(t){return _.map(t,this._createRequest)},this._createRequest=function(t){return $.ajax({type:"GET",url:t})}}
